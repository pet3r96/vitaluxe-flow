name: Deploy Vitaluxe to AWS Lightsail

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # üß© Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # üîê Step 2: Configure AWS credentials via OIDC
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # üê≥ Step 3: Build Docker image
      - name: Build Docker image
        run: |
          echo "üöß Building Docker image..."
          docker build -t vitaluxe-app .

      # üîë Step 4: Login & Push to Amazon ECR
      - name: Login & Push to ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          echo "üîê Logging into Amazon ECR..."

          # Extract account ID and region from ECR_REPOSITORY
          ACCOUNT_ID=$(echo "$ECR_REPOSITORY" | cut -d'.' -f1)
          REGION=$(echo "$ECR_REPOSITORY" | cut -d'.' -f4)
          echo "Using AWS account: $ACCOUNT_ID"
          echo "Using region: $REGION"

          # Login to ECR using the extracted region
          aws ecr get-login-password --region "$REGION" | docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com"

          echo "üèóÔ∏è Tagging Docker image..."
          COMMIT_SHA=$(echo "${GITHUB_SHA::7}")
          docker tag vitaluxe-app:latest "$ECR_REPOSITORY:$COMMIT_SHA"
          docker tag vitaluxe-app:latest "$ECR_REPOSITORY:latest"

          echo "üì¶ Pushing image to ECR..."
          docker push "$ECR_REPOSITORY:$COMMIT_SHA"
          docker push "$ECR_REPOSITORY:latest"
          
      # üöÄ Step 5: Deploy to AWS Lightsail
      - name: Deploy to Lightsail
        env:
          LIGHTSAIL_SERVICE_NAME: ${{ secrets.LIGHTSAIL_SERVICE_NAME }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          echo "üöÄ Deploying new container version to Lightsail..."
          aws lightsail create-container-service-deployment \
            --service-name "$LIGHTSAIL_SERVICE_NAME" \
            --containers "{
              \"vitaluxe\": {
                \"image\": \"${ECR_REPOSITORY}:latest\",
                \"ports\": {\"80\": \"HTTP\"}
              }
            }" \
            --public-endpoint "{
              \"containerName\": \"vitaluxe\",
              \"containerPort\": 80
            }"

      # ‚úÖ Step 6: Verify deployment
      - name: Verify Lightsail Deployment
        env:
          LIGHTSAIL_SERVICE_NAME: ${{ secrets.LIGHTSAIL_SERVICE_NAME }}
        run: |
          echo "üîç Checking deployment status..."
          aws lightsail get-container-services \
            --query "containerServices[?serviceName=='$LIGHTSAIL_SERVICE_NAME'].[serviceName, state, url]" \
            --output table
